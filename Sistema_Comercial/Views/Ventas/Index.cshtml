@model Sistema_Comercial.Models.Ventas

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Ventas</h4>
    <hr />
    <h6>Cliente</h6>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CLIENTE.TIPODOCUMENTO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            <select class="form-control" id="TipoDocumento">
                <option value="1">Cédula</option>
                <option value="2">RIF</option>
            </select>
            @Html.ValidationMessageFor(model => model.CLIENTE.TIPODOCUMENTO, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.CLIENTE.NUMERODOCUMENTO, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.CLIENTE.NUMERODOCUMENTO, new {htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CLIENTE.NUMERODOCUMENTO, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.CLIENTE.NOMBRES, htmlAttributes: new {  @class = "control-label col-md-1" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.CLIENTE.NOMBRES, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CLIENTE.NOMBRES, "", new { @class = "text-danger" })
        <input id="ID_CLIENTE" hidden="hidden" />
        </div>
    </div>
    <br /><br /><br />

</div>

<div class="form-horizontal">

    <h6>Productos</h6>
    <div class="form-group">
        <table class="table">
            <tr>
                <td> @Html.LabelFor(model => model.PRODUCTOS[0].CODIGO, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                <td> @Html.LabelFor(model => model.PRODUCTOS[0].DESCRIPCION, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                <td> @Html.LabelFor(model => model.PRODUCTOS[0].CANTIDAD, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                <td> @Html.LabelFor(model => model.PRODUCTOS[0].PVP, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                <td> @Html.LabelFor(model => model.PRODUCTOS[0].TOTAL, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                <td></td>
            </tr>
            <tbody>
                @for (var i = 0; i < Model.PRODUCTOS.Count; i++)
                {

                    <tr>
                        <td>@Html.EditorFor(model => model.PRODUCTOS[i].CODIGO, new { htmlAttributes = new { @id = "Codigo", @required = "required", @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.PRODUCTOS[i].DESCRIPCION, new { htmlAttributes = new { @id = "Descripcion", @readonly = "readonly", @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.PRODUCTOS[i].CANTIDAD, new { htmlAttributes = new { @id = "Cantidad", @type = "number", @min = "0", @step = "0.01", @Value = 0, @class = "form-control" } })</td>
                        <td>@Html.EditorFor(model => model.PRODUCTOS[i].PVP, new { htmlAttributes = new { @id = "Pvp", @readonly = "readonly", @class = "form-control" } })</td>
                        <td>
                            @Html.EditorFor(model => model.PRODUCTOS[i].TOTAL, new { htmlAttributes = new { @id = "Total", @readonly = "readonly", @class = "form-control" } })
                        </td>
                        <td>
                            <input id="ID_PRODUCTO" hidden="hidden" />
                            <button type="button" class="btn btn-default" id="addRow"><i class="fa fa-plus"></i></button>
                        </td>
                    </tr>

                }
            </tbody>
        </table>

    </div>


</div>

<div class="form-horizontal" >
    <h6>Pago</h6>
    <hr />
    <div class="form-group">
        <label class="control-label col-md-10">MONTO TOTAL : <span id="MontoTotal">0.00</span> </label>
        <div class="col-md-2">
            <button type="button" class="btn btn-default" id="addRowPay"><i class="fa fa-plus"></i></button>
        </div>
    </div>
</div>
<div class="form-horizontal" id="PayForm">
    <div class="form-group" id="pay_index">
        <label class="control-label col-md-2">MONTO A PAGAR: </label>
        <div class="col-md-3">
            <input id="Monto_Pago" type="number" required="required" step="0.01" min="0" class="form-control">
        </div>
        <label class="control-label col-md-1">MONEDA: </label>
        <div class="col-md-3">
            <select id="monedas" class="form-control"> </select>
        </div>
        <label class="control-label col-md-1">TC : </label>
        <div class="col-md-2">
            <input id="Monto_TC" type="number" required="required" step="0.01" min="0" class="form-control">
        </div>
       
    </div>
</div>
<br />
<div class="form-horizontal">
    <div class="form-group">
        <div class="col-md-12">
            <button type="button" class="btn btn-success" id="save">Guardar</button>
        </div>
    </div>
</div>
    }
    @section Scripts
 {
        <script>
            $(document).ready(function () {
                var monedas;
                $.ajax({
                    'async': false,
                    'type': "GET",
                    'global': false,
                    'dataType': 'html',
                    'url': "/Ventas/GetMonedas",
                    'data': {},
                    'success': function (data) {
                        debugger;
                        monedas = JSON.parse(data);
                        for (var i = 0; i < monedas.length; i++) {
                            $('#monedas').append('<option value="' + monedas[i]["ID"] + '">' + monedas[i]["DESCRIPCION"] + '</option>');
                        }

                    }
                });
                return monedas;
            });
            $("#addRow").bind("click", function () {
                $.get('/Ventas/AddRow', function (template) {
                    $('.table > tbody:last').append(template);
                });
            });
            $("#addRowPay").bind("click", function () {
                if ($("div[id^=pay_index]").length < 3) {
                    $("#pay_index").clone().appendTo($("#PayForm"));
                }
                

            });
            $(document).on('blur', '#Pvp', function () {
                debugger;
                var cantidad = $(this).parent().parent().find('#Cantidad').val();
                var pvp = $(this).val();
                var total = cantidad * pvp;
                $(this).parent().parent().find('#Total').val(total);
            });

            $(document).on('blur', '#Cantidad', function () {
                var codigo = $(this).parent().parent().find('#Codigo').val();
                var producto = getProducto(codigo);
                var cantidad = $(this).val();
                if (parseFloat(cantidad) > producto["CANTIDAD"]) {
                    debugger;
                    alert("La cantidad supera el stock existente. Stock actual: " + producto["CANTIDAD"]);
                    $(this).val(0);
                } else {
                    var pvp = $(this).parent().parent().find('#Pvp').val();
                    var total = cantidad * pvp;
                    $(this).parent().parent().find('#Total').val(total);

                    var suma = 0;
                    $(".table").find('tr').each(function (i, el) {
                        if (i > 0) {
                            var $tds = $(this).find('td');
                            console.log($tds.eq(4));
                            suma = parseFloat($tds.eq(4).find("#Total").val()) + suma;
                        }

                    });
                    $("#MontoTotal").text(suma);
                }


            });
            $(document).on('blur', '#Codigo', function () {
                var producto = getProducto($(this).val());
                $(this).parent().parent().find('#Pvp').val(producto["PVP"]);
                $(this).parent().parent().find('#Descripcion').val(producto["DESCRIPCION"]);
                $(this).parent().parent().find('#ID_PRODUCTO').val(producto["ID"]);
                debugger;
            });
            function getProducto(code) {
                var producto;

                $.ajax({
                    'async': false,
                    'type': "GET",
                    'global': false,
                    'dataType': 'html',
                    'url': "/Ventas/GetProduct?code=" + code,
                    'data': {},
                    'success': function (data) {
                        debugger;
                        producto = JSON.parse(data);

                    }
                });
                debugger;
                return producto;
            }

            $(document).on('blur', '#CLIENTE_NUMERODOCUMENTO', function () {
                debugger;
                $.get('/Ventas/GetCliente?TipoDocumento=' + $("#TipoDocumento").val()+'&NumeroDocumento='+$(this).val(), function (template) {
                    if (template != null) {
                        $("#CLIENTE_NOMBRES").val(template["NOMBRES"]);
                        $("#ID_CLIENTE").val(template["ID"]);
                    }
                });
            });
            $(document).on('click', '#save', function () {
                debugger;
                var data = {
                    TOTAL: $("#MontoTotal").text(),
                    CLIENTE: { ID: $("#ID_CLIENTE").val(), NOMBRES: $("#CLIENTE_NOMBRES").val(), NUMERODOCUMENTO: $("#CLIENTE_NUMERODOCUMENTO").val(), ID_TIPODOCUMENTO: $("#TipoDocumento").val() },
                    PRODUCTOS: [],
                    PAGO: { MONTO: $("#MontoTotal").text(), DETALLEPAGOS:[] }
                };

                $(".table").find('tr').each(function (i, el) {
                    if (i > 0) {
                        var $tds = $(this).find('td');
                        var id_producto = parseFloat($tds.eq(5).find("#ID_PRODUCTO").val());
                        var cantidad = parseFloat($tds.eq(2).find("#Cantidad").val());
                        data["PRODUCTOS"].push({ CANTIDAD: cantidad, ID: id_producto });
                    }

                });

                $("div[id^=pay_index]").each(function (i, el) {
                    data["PAGO"]["DETALLEPAGOS"].push({ ID: 0, DETALLECAJA: { ID_MONEDA: $(this).find('#monedas').val(), MONTO: $(this).find('#Monto_Pago').val(), TIPO_CAMBIO: $(this).find('#Monto_TC').val() }})
                    
                });
                
                $.post('/Ventas/Index', data).done(function (result) {
                    alert("Data Loaded: " + result);
                });
                   
            });
        </script>
    }
